name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc, clang]
        stdlib: [libstdc++, libc++]
        sqlite: [ON, OFF]
        system_sqlite: [ON, OFF]
        exclude:
        - compiler: gcc
          stdlib: libc++
        - sqlite: OFF
          system_sqlite: OFF # If sqlite is disabled this does not matter

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Update repository
      run: sudo apt update

    - name: Install dependencies
      run: |
        sudo apt install -y software-properties-common
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        if [ "${{ matrix.compiler }}" == "gcc" ]; then
          sudo apt install -y gcc g++
        elif [ "${{ matrix.compiler }}" == "clang" ]; then
          sudo apt install -y clang libc++-dev libc++abi-dev
        fi

    - name: Install CMake
      run: sudo apt install -y cmake

    - name: Install SQLite if needed
      run: |
        if [ "${{ matrix.sqlite }}" == "ON" ]; then
          if [ "${{ matrix.system_sqlite }}" == "ON" ]; then
            sudo apt install -y libsqlite3-dev
          else
            sudo apt remove -y --purge libsqlite3-dev
          fi
        fi

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build \
             -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
             -DCMAKE_C_COMPILER=/usr/bin/${{ matrix.compiler }} \
             -DCMAKE_CXX_COMPILER=$([[ ${{ matrix.compiler }} == 'gcc' ]] && echo '/usr/bin/g++' || echo '/usr/bin/clang++') \
             -DCMAKE_CXX_FLAGS="${{ matrix.stdlib == 'libc++' && matrix.compiler == 'clang' && '-stdlib=libc++' || '' }}" \
             -DENABLE_SQLITE=${{ matrix.sqlite }} \
             -DWITH_SYSTEM_SQLITE=${{ matrix.system_sqlite }} \
             -DENABLE_TEST=ON
    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: Run unit tests
      run: ctest --output-on-failure --test-dir ${{ github.workspace }}/build

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}\build -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DENABLE_SQLITE=ON -DWITH_SYSTEM_SQLITE=OFF -DENABLE_TEST=ON

      - name: Build
        run: cmake --build ${{ github.workspace }}\build --config ${{ env.BUILD_TYPE }}

      - name: Copy DLLs
        run: |
          copy ${{ github.workspace }}\build\StormByte\StormByte.dll ${{ github.workspace }}\build\test
          copy ${{ github.workspace }}\build\thirdparty\sqlite3\sqlite3.dll ${{ github.workspace }}\build\test

      - name: Run unit tests
        run: ctest --output-on-failure --test-dir ${{ github.workspace }}\build